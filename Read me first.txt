/* THE TABLES FOR THIS SYSTEM ARE AS FOLLOW */
seed_schedule_table.sql
food_item_table.sql
seat_configuration_table.sql
schedule_food_relation_table.sql
order_details_table.sql
order_food_details_table.sql

/*TO VIEW MENU_ITEMS IN THE RESTAURANT BY THE CUSTOMER*/
/*VIEW_CODE*/
menu_view.sql

/*EXECUTION QUERY*/
SELECT * FROM `menu_list`


/*TO VIEW EVERYDAY STOCK BY THE OWNER OF THE RESTURANT*/
/*VIEW_CODE*/
stock_view.sql

/*EXECUTION QUERY*/
SELECT * FROM `view_stock1`


/* PROCEDURE TO BE CALLED BY CUSTOMER TO MAKE ORDER*/
/* CUSTOMER MUST PROVIDE SEAT NO, FOOD ITEM NAMES, THEN FOOD ITEM COUNT */
pr_customer_order.sql

/* PROCEDURE TO SPLIT INPUT OF THE FOOD ITEMS AND ITS COUNT  */
/*THIS PROCEDURE WILL BE CALLED FROM pr_customer_order.sql*/
pr_input_split.sql

/* SUB PROCEDURE TO MAKE THE ACTUAL ORDER CHECKING ALL CONSTRAINTS */
/*THIS PROCEDURE WILL BE CALLED FROM pr_input_split.sql*/
pr_take_order.sql

/* PROCEDURE TO CANCEL ORDER */
/* THE CUSTOMER MUST ENTER THEIR ORDER ID*/
pr_cancel_order.sql

/* PROCEDURE TO CANCEL ORDER WITH SEAT NO*/
/* THE CUSTOMER MUST ENTER THEIR SEAT NO*/
pr_cancel_order_with_seatno.sql


/* FUNCTION TO WHETHER ALL SEATS OF THE RESTAURANT ARE FILLED  */
fn_ckeck_all_seats_filled.sql

/* FUNCTION TO WHETHER PARTICULAR SEAT IS AVAILABLE */
fn_check_seat_available.sql

/* FUNCTION TO WHETHER FOOD ITEM IS AVAILABLE IN THE RESTAURANT*/
fn_validate_food_item.sql

/* FUNCTION TO GET THE FOOD ID OF THE ITEM*/
fn_get_food_item.sql

/* FUNCTION TO GET THE SCHEDULE ID OF THE ITEM*/
fn_get_schedule_id.sql

/* FUNCTION TO WHETHER FOOD ITEM IS AVAILABLE IN THE STOCK*/
fn_check_food_available_based_on_stock.sql

/* FUNCTION TO VALIDATE THE ORDER ID*/
fn_validate_order_id.sql

/* FUNCTION TO GET THE ORDER STATUS*/
fn_get_order_status.sql

